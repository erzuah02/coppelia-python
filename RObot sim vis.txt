#include "remoteApi/extApi.h"
#include "remoteApi/extApiPlatform.h"

int main(int argc, char** argv) {
    int clientID = simxStart("127.0.0.1", 19999, true, true, 5000, 5);
    if (clientID == -1) {
        printf("Failed to connect to remote API server.\n");
        return 0;
    }
    
    simxInt leftMotorHandle, rightMotorHandle;
    simxGetObjectHandle(clientID, "leftMotor", &leftMotorHandle, simx_opmode_blocking);
    simxGetObjectHandle(clientID, "rightMotor", &rightMotorHandle, simx_opmode_blocking);
    
    simxFloat position[3];
    simxGetObjectPosition(clientID, robotHandle, -1, position, simx_opmode_streaming);
    
    simxFloat targetPosition[3] = {10, 0, 0};
    simxFloat distanceThreshold = 0.5;
    simxFloat maxSpeed = 5;
    simxFloat minSpeed = 1;
    
    while (simxGetConnectionId(clientID) != -1) {
        simxGetObjectPosition(clientID, robotHandle, -1, position, simx_opmode_buffer);
        
        simxFloat distance = sqrt(pow(position[0]-targetPosition[0], 2) + pow(position[1]-targetPosition[1], 2));
        
        if (distance > distanceThreshold) {
            simxFloat angle = atan2(targetPosition[1]-position[1], targetPosition[0]-position[0]) - position[2];
            
            while (angle > M_PI) angle -= 2*M_PI;
            while (angle < -M_PI) angle += 2*M_PI;
            
            simxFloat speed = maxSpeed * (distance / 5);
            if (speed < minSpeed) speed = minSpeed;
            
            simxFloat leftSpeed = speed - (angle * 0.5);
            simxFloat rightSpeed = speed + (angle * 0.5);
            
            simxSetJointTargetVelocity(clientID, leftMotorHandle, leftSpeed, simx_opmode_oneshot);
            simxSetJointTargetVelocity(clientID, rightMotorHandle, rightSpeed, simx_opmode_oneshot);
        }
        else {
            simxSetJointTargetVelocity(clientID, leftMotorHandle, 0, simx_opmode_oneshot);
            simxSetJointTargetVelocity(clientID, rightMotorHandle, 0, simx_opmode_oneshot);
        }
    }
    
    simxFinish(clientID);
    return 0;
}
